hydra:
  run:
    dir: outputs/${experiment.name}/${now:%Y-%m-%d_%H-%M-%S}
  sweep:
    dir: outputs/${experiment.name}/multirun/${now:%Y-%m-%d_%H-%M-%S}
    subdir: ${hydra:job.num}_${model.name}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    study_name: production_multi_model_optimization
    storage: null
    n_trials: 100
    n_jobs: 4
    direction: minimize
    search_space: null
    custom_search_space: null
    params:
      model: collaborative,content_based,hybrid,deep_cf
      train.learning_rate: 0.0001,0.0005,0.001,0.005,0.01,0.02,0.05
      train.batch_size: 128,256,512,1024
      model.dropout: 0.1,0.2,0.3,0.4,0.5
      train.weight_decay: 0.0001,0.0005,0.001,0.005,0.01
      train.patience: 5,8,10,12,15
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 42
      n_startup_trials: 10
      n_ei_candidates: 24
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra/sweeper=optuna_production
    - hydra.mode=MULTIRUN
    task:
    - model=hybrid
    - train.learning_rate=0.02
    - train.batch_size=512
    - model.dropout=0.2
    - train.weight_decay=0.0001
    - train.patience=12
    - train=production
  job:
    name: ${experiment.name}_${model.name}
    chdir: null
    override_dirname: model.dropout=0.2,model=hybrid,train.batch_size=512,train.learning_rate=0.02,train.patience=12,train.weight_decay=0.0001,train=production
    id: '2'
    num: 2
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: C:\Users\mvill\github\reco_app
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: C:\Users\mvill\github\reco_app\conf
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: C:\Users\mvill\github\reco_app\outputs\movie_recommendation\multirun\2025-09-29_10-16-31\2_hybrid
    choices:
      experiment: null
      optimizer: adam
      data: default
      train: production
      model: hybrid
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna_production
      hydra/launcher: basic
      hydra/output: default
  verbose: false
